{
    "type": "bundle",
    "id": "bundle--4dae5ad0-48ab-417a-939a-b789d09e30e1",
    "spec_version": "2.0",
    "objects": [
        {
            "external_references": [
                {
                    "source_name": "mitre-attack",
                    "external_id": "T1059.005",
                    "url": "https://attack.mitre.org/techniques/T1059/005"
                },
                {
                    "source_name": "Microsoft VBScript",
                    "url": "https://docs.microsoft.com/previous-versions//1kw29xwf(v=vs.85)",
                    "description": "Microsoft. (2011, April 19). What Is VBScript?. Retrieved March 28, 2020."
                }
            ],
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "name": "VBScript",
            "description": "Adversaries may abuse VBScript scripts for execution. VBScript is a Windows scripting language modeled after the Visual Basic language, also known as Visual Basic for Applications (VBA).(Citation: Microsoft VBScript) VBScript is built on top of the [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM), which allows it to interact with the environment. VBScript can also be used in place of JavaScript on webpages served to Internet Explorer, however, most modern browsers do not come with VBScript support.\n\nIn a command-line environment, <code>Cscript.exe</code> is used to execute scripts. If a GUI is desired, <code>Wscript.exe</code> is used.\n\nAdversaries may abuse VBScript to execute malicious command and payloads. A common usage is embedding VBScript content into [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) payloads.",
            "id": "attack-pattern--dfd7cc1d-e1d8-4394-a198-97c4cab8aa67",
            "type": "attack-pattern",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack",
                    "phase_name": "execution"
                }
            ],
            "modified": "2020-03-28T17:34:02.708Z",
            "created": "2020-03-09T14:29:51.508Z",
            "x_mitre_platforms": [
                "Windows"
            ],
            "x_mitre_data_sources": [
                "Windows event logs",
                "Process monitoring",
                "Process command-line parameters"
            ],
            "x_mitre_detection": "Monitor for usage of <code>Cscript.exe</code> or <code>Wscript.exe</code>. Understanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\n\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.",
            "x_mitre_permissions_required": [
                "User",
                "Administrator",
                "SYSTEM"
            ],
            "x_mitre_is_subtechnique": true,
            "x_mitre_version": "1.0"
        }
    ]
}