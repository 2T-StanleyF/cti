{
    "id": "bundle--70d0dbf1-31f8-4092-849e-ce4c63450aa5",
    "objects": [
        {
            "created": "2017-10-25T14:48:14.460619Z",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "description": "An app could download and execute dynamic code (not included in the original application package) after installation to evade static analysis techniques (and potentially dynamic analysis techniques) used for application vetting or application store review [[Citation: Poeplau-ExecuteThis]]. \n\nOn Android, dynamic code could include native code, Dalvik code, or JavaScript code that uses the Android WebView's JavascriptInterface capability [[Citation: Bromium-AndroidRCE]].\n\nOn iOS, techniques for executing dynamic code downloaded after application installation include JSPatch [[Citation: FireEye-JSPatch]].  [[Citation: Wang]] et al. describe a related method of constructing malicious logic at app runtime on iOS [[Citation: Wang]].\n\nPlatforms: Android, iOS",
            "external_references": [
                {
                    "external_id": "MOB-T1010",
                    "source_name": "mitre-attack-mobile",
                    "url": "https://attack.mitre.org/mobile/index.php/Technique/MOB-T1010"
                },
                {
                    "external_id": "APP-20",
                    "source_name": "NIST Mobile Threat Catalogue",
                    "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-20.html"
                },
                {
                    "description": "Sebastian Poeplau, Yanick Fratantonio, Antonio Bianchi, Christopher Kruegel, Giovanni Vigna. (2014, February). Execute This! Analyzing Unsafe and Malicious Dynamic Code Loading in Android Applications. Retrieved December 21, 2016.",
                    "source_name": "Poeplau-ExecuteThis",
                    "url": "https://www.internetsociety.org/sites/default/files/10%205%200.pdf"
                },
                {
                    "description": "Tom Sutcliffe. (2014, July 31). Remote code execution on Android devices. Retrieved December 9, 2016.",
                    "source_name": "Bromium-AndroidRCE",
                    "url": "https://labs.bromium.com/2014/07/31/remote-code-execution-on-android-devices/"
                },
                {
                    "description": "Jing Xie, Zhaofeng Chen, Jimmy Su. (2016, January 27). HOT OR NOT? THE BENEFITS AND RISKS OF IOS REMOTE HOT PATCHING. Retrieved December 9, 2016.",
                    "source_name": "FireEye-JSPatch",
                    "url": "https://www.fireeye.com/blog/threat-research/2016/01/hot%20or%20not%20the%20bene.html"
                },
                {
                    "description": "Tielei Wang, Kangjie Lu, Long Lu, Simon Chung, and Wenke Lee. (2013, August). Jekyll on iOS: When Benign Apps Become Evil. Retrieved December 9, 2016.",
                    "source_name": "Wang",
                    "url": "https://www.usenix.org/conference/usenixsecurity13/technical-sessions/presentation/wang%20tielei"
                },
                {
                    "description": "Chris Dehghanpoor. (2016, January 6). Brain Test re-emerges: 13 apps found in Google Play  Read more: Brain Test re-emerges: 13 apps found in Google Play. Retrieved December 21, 2016.",
                    "source_name": "Lookout-BrainTest",
                    "url": "https://blog.lookout.com/blog/2016/01/06/brain-test-re-emerges/"
                },
                {
                    "description": "Claud Xiao. (2016, February 21). Pirated iOS App Store\u2019s Client Successfully Evaded Apple iOS Code Review. Retrieved December 12, 2016.",
                    "source_name": "ZergHelper",
                    "url": "http://researchcenter.paloaltonetworks.com/2016/02/pirated-ios-app-stores-client-successfully-evaded-apple-ios-code-review/"
                }
            ],
            "id": "attack-pattern--6c49d50f-494d-4150-b774-a655022d20a6",
            "kill_chain_phases": [
                {
                    "kill_chain_name": "mitre-attack-mobile",
                    "phase_name": "defense-evasion"
                }
            ],
            "modified": "2017-10-25T14:48:14.460619Z",
            "name": "Download New Code at Runtime",
            "object_marking_refs": [
                "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
            ],
            "type": "attack-pattern",
            "x_mitre_platforms": [
                "Android",
                "iOS"
            ],
            "x_mitre_tactic_type": [
                "Post-Adversary Device Access"
            ]
        }
    ],
    "spec_version": "2.0",
    "type": "bundle"
}