{
    "type": "attack-pattern",
    "id": "attack-pattern--0ee57165-7e17-44b3-88e7-6d8972dafff8",
    "created_by_ref": "identity--8f6c4831-6b8a-469b-b654-9dcaeede2d35",
    "created": "2018-03-06T15:56:01.261Z",
    "modified": "2018-03-06T15:56:01.261Z",
    "name": "Removal of filters: Input filters, output filters, data masking",
    "description": "An attacker removes or disables filtering mechanisms on the target application. Input filters prevent invalid data from being sent to an application (for example, overly large inputs that might cause a buffer overflow or other malformed inputs that may not be correctly handled by an application). Input filters might also be designed to constrained executable content. For example, if an application accepts scripting languages as input, an input filter could constrain the commands received and block those that the application's administrator deems to be overly powerful. An output filter screens responses from an application or person in order to prevent disclosure of sensitive information. For example, an application's output filter might block output that is sourced to sensitive folders or which contains certain keywords. A data mask is similar to an output filter, but usually applies to structured data, such as found in databases. Data masks elide or replace portions of the information returned from a query in order to protect against the disclosure of sensitive information.\nIf an input filter is removed the attacker will be able to send content to the target and have the target utilize it without it being sanitized. If the content sent by the attacker is executable, the attacker may be able to execute arbitrary commands on the target. If an output filter or data masking mechanism is disabled, the target may send out sensitive information that would otherwise be elided by the filters. If the data mask is disabled, sensitive information stored in a database would be returned unaltered. This could result in the disclosure of sensitive information, such as social security numbers of payment records.\nThis attack is usually executed as part of a larger attack series. The attacker would disable filters and would then mount additional attacks to either insert commands or data or query the target application in ways that would otherwise be prevented by the filters.",
    "external_references": [
        {
            "source_name": "capec",
            "url": "https://capec.mitre.org/data/definitions/200.html",
            "external_id": "CAPEC-200"
        }
    ],
    "object_marking_refs": [
        "marking-definition--aee86263-8856-421f-b382-457d8408db7d"
    ],
    "x_capec_abstraction": "Detailed",
    "x_capec_prerequisites": [
        "The target application must utilize some sort of filtering mechanism (input, output, or data masking)."
    ],
    "x_capec_typical_severity": "Medium",
    "x_resources_required": "None: No specialized resources are required to execute this type of attack."
}