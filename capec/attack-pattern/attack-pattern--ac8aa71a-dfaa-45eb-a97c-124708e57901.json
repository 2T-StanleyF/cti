{
    "type": "attack-pattern",
    "id": "attack-pattern--ac8aa71a-dfaa-45eb-a97c-124708e57901",
    "created_by_ref": "identity--d922e967-ff9b-4f27-97e6-2fc5f54aac51",
    "created": "2018-03-05T19:06:09.745Z",
    "modified": "2018-03-05T19:06:09.745Z",
    "name": "Command Delimiters",
    "description": "An attack of this type exploits a programs' vulnerabilities that allows an attacker's commands to be concatenated onto a legitimate command with the intent of targeting other resources such as the file system or database. The system that uses a filter or a blacklist input validation, as opposed to whitelist validation is vulnerable to an attacker who predicts delimiters (or combinations of delimiters) not present in the filter or blacklist. As with other injection attacks, the attacker uses the command delimiter payload as an entry point to tunnel through the application and activate additional attacks through SQL queries, shell commands, network scanning, and so on.",
    "external_references": [
        {
            "source_name": "capec",
            "url": "https://capec.mitre.org/data/definitions/15.html",
            "external_id": "CAPEC-15"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/146.html",
            "external_id": "CWE-146"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/77.html",
            "external_id": "CWE-77"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/184.html",
            "external_id": "CWE-184"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/78.html",
            "external_id": "CWE-78"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/185.html",
            "external_id": "CWE-185"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/93.html",
            "external_id": "CWE-93"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/140.html",
            "external_id": "CWE-140"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/157.html",
            "external_id": "CWE-157"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/138.html",
            "external_id": "CWE-138"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/154.html",
            "external_id": "CWE-154"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/697.html",
            "external_id": "CWE-697"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/713.html",
            "external_id": "CWE-713"
        }
    ],
    "object_marking_refs": [
        "marking-definition--068ab041-90bb-4e30-9394-d306c62765a6"
    ],
    "x_capec_abstraction": "Standard",
    "x_capec_consequences": {
        "Run Arbitrary Code": "Execute unauthorized code or commands"
    },
    "x_capec_example_instances": [
        "By appending special characters, such as a semicolon or other commands that are executed by the target process, the attacker is able to execute a wide variety of malicious commands in the target process space, utilizing the target's inherited permissions, against any resource the host has access to. The possibilities are vast including injection attacks against RDBMS (SQL Injection), directory servers (LDAP Injection), XML documents (XPath and XQuery Injection), and command line shells. In many injection attacks, the results are converted back to strings and displayed to the client process such as a web browser without tripping any security alarms, so the network firewall does not log any out of the ordinary behavior.\nLDAP servers house critical identity assets such as user, profile, password, and group information that is used to authenticate and authorize users. An attacker that can query the directory at will and execute custom commands against the directory server is literally working with the keys to the kingdom in many enterprises. When user, organizational units, and other directory objects are queried by building the query string directly from user input with no validation, or other conversion, then the attacker has the ability to use any LDAP commands to query, filter, list, and crawl against the LDAP server directly in the same manner as SQL injection gives the ability to the attacker to run SQL commands on the database."
    ],
    "x_capec_likelihood_of_attack": "High",
    "x_capec_prerequisites": [
        "Software's input validation or filtering must not detect and block presence of additional malicious command."
    ],
    "x_capec_skills_required": {
        "The attacker has to identify injection vector, identify the specific commands, and optionally collect the output, i.e. from an interactive session.": "Medium"
    },
    "x_capec_typical_severity": "High",
    "x_resources_required": "Ability to communicate synchronously or asynchronously with server. Optionally, ability to capture output directly through synchronous communication or other method such as FTP."
}