{
    "type": "attack-pattern",
    "id": "attack-pattern--45aaa076-41c9-411f-bc0f-7132095c14bb",
    "created_by_ref": "identity--2888a06a-5541-4bad-8066-df6f196f70ff",
    "created": "2018-03-05T19:00:34.927Z",
    "modified": "2018-03-05T19:00:34.927Z",
    "name": "Using Leading 'Ghost' Character Sequences to Bypass Input Filters",
    "description": "Some APIs will strip certain leading characters from a string of parameters. An adversary can intentionally introduce leading \"ghost\" characters (extra characters that don't affect the validity of the request at the API layer) that enable the input to pass the filters and therefore process the adversary's input. This occurs when the targeted API will accept input data in several syntactic forms and interpret it in the equivalent semantic way, while the filter does not take into account the full spectrum of the syntactic forms acceptable to the targeted API.",
    "external_references": [
        {
            "source_name": "capec",
            "url": "https://capec.mitre.org/data/definitions/3.html",
            "external_id": "CAPEC-3"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/173.html",
            "external_id": "CWE-173"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/41.html",
            "external_id": "CWE-41"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/172.html",
            "external_id": "CWE-172"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/171.html",
            "external_id": "CWE-171"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/179.html",
            "external_id": "CWE-179"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/180.html",
            "external_id": "CWE-180"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/181.html",
            "external_id": "CWE-181"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/183.html",
            "external_id": "CWE-183"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/184.html",
            "external_id": "CWE-184"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/20.html",
            "external_id": "CWE-20"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/74.html",
            "external_id": "CWE-74"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/697.html",
            "external_id": "CWE-697"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/707.html",
            "external_id": "CWE-707"
        }
    ],
    "object_marking_refs": [
        "marking-definition--ad91480b-92ca-4958-92fe-407f4493dcb9"
    ],
    "x_capec_abstraction": "Detailed",
    "x_capec_example_instances": [
        "Alternate Encoding with Ghost Characters in FTP and Web Servers\n\t.../../../test.txt\n\t............/../../test.txt\n\t..?/../../test.txt\n\t..????????/../../test.txt\n\t../test.txt\nSome web and FTP servers fail to detect prohibited upward directory traversals if the user-supplied pathname contains extra characters such as an extra leading dot. For example, a program that will disallow access to the pathname \"../test.txt\" may erroneously allow access to that file if the pathname is specified as \".../test.txt\". This attack succeeds because 1) the input validation logic fails to detect the triple-dot as a directory traversal attempt (since it isn't dot-dot), 2) some part of the input processing decided to strip off the \"extra\" dot, leaving the dot-dot behind.\nUsing the file system API as the target, the following strings are all equivalent to many programs:\nAs you can see, there are many ways to make a semantically equivalent request. All these strings ultimately result in a request for the file ../test.txt."
    ],
    "x_capec_likelihood_of_attack": "Medium",
    "x_capec_prerequisites": [
        "The targeted API must ignore the leading ghost characters that are used to get past the filters for the semantics to be the same."
    ],
    "x_capec_typical_severity": "Medium",
    "x_resources_required": ""
}