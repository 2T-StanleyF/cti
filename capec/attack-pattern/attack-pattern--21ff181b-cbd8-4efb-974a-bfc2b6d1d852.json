{
    "type": "attack-pattern",
    "id": "attack-pattern--21ff181b-cbd8-4efb-974a-bfc2b6d1d852",
    "created_by_ref": "identity--2888a06a-5541-4bad-8066-df6f196f70ff",
    "created": "2018-03-05T19:00:36.452Z",
    "modified": "2018-03-05T19:00:36.452Z",
    "name": "Using Slashes in Alternate Encoding",
    "description": "This attack targets the encoding of the Slash characters. An attacker would try to exploit common filtering problems related to the use of the slashes characters to gain access to resources on the target host. Directory-driven systems, such as file systems and databases, typically use the slash character to indicate traversal between directories or other container components. For murky historical reasons, PCs (and, as a result, Microsoft OSs) choose to use a backslash, whereas the UNIX world typically makes use of the forward slash. The schizophrenic result is that many MS-based systems are required to understand both forms of the slash. This gives the attacker many opportunities to discover and abuse a number of common filtering problems. The goal of this pattern is to discover server software that only applies filters to one version, but not the other.",
    "external_references": [
        {
            "source_name": "capec",
            "url": "https://capec.mitre.org/data/definitions/79.html",
            "external_id": "CAPEC-79"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/173.html",
            "external_id": "CWE-173"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/171.html",
            "external_id": "CWE-171"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/180.html",
            "external_id": "CWE-180"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/181.html",
            "external_id": "CWE-181"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/20.html",
            "external_id": "CWE-20"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/74.html",
            "external_id": "CWE-74"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/73.html",
            "external_id": "CWE-73"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/21.html",
            "external_id": "CWE-21"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/22.html",
            "external_id": "CWE-22"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/185.html",
            "external_id": "CWE-185"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/200.html",
            "external_id": "CWE-200"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/697.html",
            "external_id": "CWE-697"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/707.html",
            "external_id": "CWE-707"
        }
    ],
    "object_marking_refs": [
        "marking-definition--ad91480b-92ca-4958-92fe-407f4493dcb9"
    ],
    "x_capec_abstraction": "Detailed",
    "x_capec_consequences": {
        "Run Arbitrary Code": "Execute unauthorized code or commands"
    },
    "x_capec_example_instances": [
        "Attack Example: Slashes in Alternate EncodingsThe two following requests are equivalent on most Web servers:\n\thttp://target server/some_directory\\..\\..\\..\\winnt\nis equivalent to\n\thttp://target server/some_directory/../../../winnt\nMultiple encoding conversion problems can also be leveraged as various slashes are instantiated in URL-encoded, UTF-8, or Unicode. Consider the strings\n\thttp://target server/some_directory\\..%5C..%5C..\\winnt\nwhere %5C is equivalent to the \\ character."
    ],
    "x_capec_likelihood_of_attack": "High",
    "x_capec_prerequisites": [
        "The application server accepts paths to locate resources.",
        "The application server does insufficient input data validation on the resource path requested by the user.",
        "The access right to resources are not set properly."
    ],
    "x_capec_skills_required": {
        "An attacker can try variation of the slashes characters.": "Low",
        "An attacker can use more sophisticated tool or script to scan a website and find a path filtering problem.": "Medium"
    },
    "x_capec_typical_severity": "High",
    "x_resources_required": ""
}