{
    "type": "attack-pattern",
    "id": "attack-pattern--05b4ac0c-ba7d-4fa1-95b8-516ae2c5ffe3",
    "created_by_ref": "identity--2888a06a-5541-4bad-8066-df6f196f70ff",
    "created": "2018-03-05T19:00:34.299Z",
    "modified": "2018-03-05T19:00:34.299Z",
    "name": "XSS Targeting Non-Script Elements",
    "description": "This attack is a form of Cross-Site Scripting (XSS) where malicious scripts are embedded in elements that are not expected to host scripts such as image tags (<img>), comments in XML documents (< !-CDATA->), etc. These tags may not be subject to the same input validation, output validation, and other content filtering and checking routines, so this can create an opportunity for an attacker to tunnel through the application's elements and launch a XSS attack through other elements.\nAs with all remote attacks, it is important to differentiate the ability to launch an attack (such as probing an internal network for unpatched servers) and the ability of the remote attacker to collect and interpret the output of said attack.",
    "external_references": [
        {
            "source_name": "capec",
            "url": "https://capec.mitre.org/data/definitions/18.html",
            "external_id": "CAPEC-18"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/80.html",
            "external_id": "CWE-80"
        }
    ],
    "object_marking_refs": [
        "marking-definition--ad91480b-92ca-4958-92fe-407f4493dcb9"
    ],
    "x_capec_abstraction": "Detailed",
    "x_capec_consequences": {
        "Run Arbitrary Code": "Execute unauthorized code or commands"
    },
    "x_capec_example_instances": [
        "An online discussion forum allows its members to post HTML-enabled messages, which can also include image tags. A malicious user embeds JavaScript in the IMG tags in his messages that gets executed within the victim's browser whenever the victim reads these messages.\n\t<img src=javascript:alert('XSS')>\nWhen executed within the victim's browser, the malicious script could accomplish a number of adversary objectives including stealing sensitive information such as usernames, passwords, or cookies."
    ],
    "x_capec_likelihood_of_attack": "High",
    "x_capec_prerequisites": [
        "The target client software must allow the execution of scripts generated by remote hosts."
    ],
    "x_capec_skills_required": {
        "Exploiting a client side vulnerability to inject malicious scripts into the browser's executable process.": "High",
        "To achieve a redirection and use of less trusted source, an adversary can simply edit content such as XML payload or HTML files that are sent to client machine.": "Low"
    },
    "x_capec_typical_severity": "Very High",
    "x_resources_required": "Ability to include malicious script in document, e.g. HTML file, or XML document. Ability to deploy a custom hostile service for access by targeted clients. Ability to communicate synchronously or asynchronously with client machine"
}