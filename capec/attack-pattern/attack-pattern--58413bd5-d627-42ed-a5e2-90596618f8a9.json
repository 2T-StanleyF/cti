{
    "type": "attack-pattern",
    "id": "attack-pattern--58413bd5-d627-42ed-a5e2-90596618f8a9",
    "created_by_ref": "identity--8f6c4831-6b8a-469b-b654-9dcaeede2d35",
    "created": "2018-03-06T15:56:02.778Z",
    "modified": "2018-03-06T15:56:02.778Z",
    "name": "Cross-Site Scripting (XSS)",
    "description": "An adversary embeds malicious scripts in content that will be served to web browsers. The goal of the attack is for the target software, the client-side browser, to execute the script with the users' privilege level. An attack of this type exploits a programs' vulnerabilities that are brought on by allowing remote hosts to execute code and scripts. Web browsers, for example, have some simple security controls in place, but if a remote attacker is allowed to execute scripts (through injecting them in to user-generated content like bulletin boards) then these controls may be bypassed. Further, these attacks are very difficult for an end user to detect.",
    "external_references": [
        {
            "source_name": "capec",
            "url": "https://capec.mitre.org/data/definitions/63.html",
            "external_id": "CAPEC-63"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/79.html",
            "external_id": "CWE-79"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/20.html",
            "external_id": "CWE-20"
        }
    ],
    "object_marking_refs": [
        "marking-definition--aee86263-8856-421f-b382-457d8408db7d"
    ],
    "x_capec_abstraction": "Standard",
    "x_capec_consequences": {
        "Run Arbitrary Code": "Execute unauthorized code or commands"
    },
    "x_capec_example_instances": [
        "Classic phishing attacks lure users to click on content that appears trustworthy, such as logos, and links that seem to go to their trusted financial institutions and online auction sites. But instead the attacker appends malicious scripts into the otherwise innocent appearing resources. The HTML source for a standard phishing attack looks like this:\n\t<a href=\"www.exampletrustedsite.com?Name=<script>maliciousscript</script>\">Trusted Site</a>\nWhen the user clicks the link, the appended script also executes on the local user's machine."
    ],
    "x_capec_likelihood_of_attack": "High",
    "x_capec_prerequisites": [
        "Target client software must be a client that allows scripting communication from remote hosts, such as a JavaScript-enabled Web Browser."
    ],
    "x_capec_skills_required": {
        "Exploiting a client side vulnerability to inject malicious scripts into the browser's executable process.": "High",
        "To achieve a redirection and use of less trusted source, an attacker can simply place a script in bulletin board, blog, wiki, or other user-generated content site that are echoed back to other client machines.": "Low"
    },
    "x_capec_typical_severity": "Very High",
    "x_resources_required": "Ability to deploy a custom hostile service for access by targeted clients. Ability to communicate synchronously or asynchronously with client machine."
}