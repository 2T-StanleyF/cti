{
    "type": "bundle",
    "id": "bundle--c10cd417-c390-4616-b4e9-ad3d38b827c9",
    "spec_version": "2.0",
    "objects": [
        {
            "type": "attack-pattern",
            "id": "attack-pattern--392168be-b0e4-4de3-8529-b956d1396a21",
            "created_by_ref": "identity--99e72de9-cd42-43b1-906d-c4f855fd3322",
            "created": "2014-06-23T00:00:00.000Z",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Reverse Engineering",
            "description": "An adversary discovers the structure, function, and composition of an object, resource, or system by using a variety of analysis techniques to effectively determine how the analyzed entity was constructed or operates. The goal of reverse engineering is often to duplicate the function, or a part of the function, of an object in order to duplicate or \"back engineer\" some aspect of its functioning. Reverse engineering techniques can be applied to mechanical objects, electronic devices, or software, although the methodology and techniques involved in each type of analysis differ widely.",
            "external_references": [
                {
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/188.html",
                    "external_id": "CAPEC-188"
                },
                {
                    "source_name": "reference_from_CAPEC",
                    "description": "Wikipedia, The Wikimedia Foundation, Inc",
                    "url": "http://en.wikipedia.org/wiki/Reverse_engineering",
                    "external_id": "REF-50"
                }
            ],
            "object_marking_refs": [
                "marking-definition--7af89974-8179-4268-a77a-47d3f7bc1c89"
            ],
            "x_capec_abstraction": "Meta",
            "x_capec_example_instances": [
                "When adversaries are reverse engineering software, methodologies fall into two broad categories, 'white box' and 'black box.' White box techniques involve methods which can be applied to a piece of software when an executable or some other compiled object can be directly subjected to analysis, revealing at least a portion of its machine instructions that can be observed upon execution. 'Black Box' methods involve interacting with the software indirectly, in the absence of the ability to measure, instrument, or analyze an executable object directly. Such analysis typically involves interacting with the software at the boundaries of where the software interfaces with a larger execution environment, such as input-output vectors, libraries, or APIs."
            ],
            "x_capec_likelihood_of_attack": "Low",
            "x_capec_prerequisites": [
                "Access to targeted system, resources, and information."
            ],
            "x_capec_resources_required": [
                "The technical resources necessary to engage in reverse engineering differ in accordance with the type of object, resource, or system being analyzed."
            ],
            "x_capec_skills_required": {
                "High": "Understanding of low level programming languages or technologies can be very helpful. For example, when reverse engineering a binary file, an understanding of assembly languages can help to determine the purpose and inner-workings of the code. Another example is reverse engineering an application that relies on networking. Here, an understanding networking protocols can provide insight into application details."
            },
            "x_capec_status": "Stable",
            "x_capec_typical_severity": "Low",
            "x_capec_version": "3.2"
        }
    ]
}