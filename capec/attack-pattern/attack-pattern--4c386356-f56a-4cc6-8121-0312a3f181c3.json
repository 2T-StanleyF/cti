{
    "type": "attack-pattern",
    "id": "attack-pattern--4c386356-f56a-4cc6-8121-0312a3f181c3",
    "created_by_ref": "identity--d922e967-ff9b-4f27-97e6-2fc5f54aac51",
    "created": "2018-03-05T19:06:09.553Z",
    "modified": "2018-03-05T19:06:09.553Z",
    "name": "Double Encoding",
    "description": "The adversary utilizes a repeating of the encoding process for a set of characters (that is, character encoding a character encoding of a character) to obfuscate the payload of a particular request. The may allow the adversary to bypass filters that attempt to detect illegal characters or strings, such as might be used in traversal or injection attacks. Filters may be able to catch illegal encoded strings but may not catch doubly encoded strings. For example, a dot (.), often used in path traversal attacks and therefore often blocked by filters, could be URL encoded as %2E. However, many filters recognize this encoding and would still block the request. In a double encoding, the % in the above URL encoding would be encoded again as %25, resulting in %252E which some filters might not catch, but which could still be interpreted as a dot (.) by interpreters on the target.",
    "external_references": [
        {
            "source_name": "capec",
            "url": "https://capec.mitre.org/data/definitions/120.html",
            "external_id": "CAPEC-120"
        }
    ],
    "object_marking_refs": [
        "marking-definition--068ab041-90bb-4e30-9394-d306c62765a6"
    ],
    "x_capec_abstraction": "Detailed",
    "x_capec_prerequisites": [
        "The target's filters must fail to detect that a character has been doubly encoded but its interpreting engine must still be able to convert a doubly encoded character to an un-encoded character."
    ],
    "x_capec_typical_severity": "Medium",
    "x_resources_required": "Tools that automate encoding of data can assist the adversary in generating encoded strings."
}