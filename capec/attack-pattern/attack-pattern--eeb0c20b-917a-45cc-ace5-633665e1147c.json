{
    "type": "attack-pattern",
    "id": "attack-pattern--eeb0c20b-917a-45cc-ace5-633665e1147c",
    "created_by_ref": "identity--2888a06a-5541-4bad-8066-df6f196f70ff",
    "created": "2018-03-05T19:00:35.094Z",
    "modified": "2018-03-05T19:00:35.094Z",
    "name": "HTTP Response Splitting",
    "description": "This attack uses a maliciously-crafted HTTP request in order to cause a vulnerable web server to respond with an HTTP response stream that will be interpreted by the client as two separate responses instead of one. This is possible when user-controlled input is used unvalidated as part of the response headers. The target software, the client, will interpret the injected header as being a response to a second request, thereby causing the maliciously-crafted contents be displayed and possibly cached.",
    "external_references": [
        {
            "source_name": "capec",
            "url": "https://capec.mitre.org/data/definitions/34.html",
            "external_id": "CAPEC-34"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/113.html",
            "external_id": "CWE-113"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/697.html",
            "external_id": "CWE-697"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/707.html",
            "external_id": "CWE-707"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/713.html",
            "external_id": "CWE-713"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/74.html",
            "external_id": "CWE-74"
        }
    ],
    "object_marking_refs": [
        "marking-definition--ad91480b-92ca-4958-92fe-407f4493dcb9"
    ],
    "x_capec_abstraction": "Detailed",
    "x_capec_consequences": {
        "Run Arbitrary Code": "Execute unauthorized code or commands"
    },
    "x_capec_example_instances": [
        "In the PHP 5 session extension mechanism, a user-supplied session ID is sent back to the user within the Set-Cookie HTTP header. Since the contents of the user-supplied session ID are not validated, it is possible to inject arbitrary HTTP headers into the response body. This immediately enables HTTP Response Splitting by simply terminating the HTTP response header from within the session ID used in the Set-Cookie directive."
    ],
    "x_capec_likelihood_of_attack": "Medium",
    "x_capec_prerequisites": [
        "User-controlled input used as part of HTTP header",
        "Ability of adversary to inject custom strings in HTTP header",
        "Insufficient input validation in application to check for input sanity before using it as part of response header"
    ],
    "x_capec_skills_required": {
        "The adversary needs to have a solid understanding of the HTTP protocol and HTTP headers and must be able to craft and inject requests to elicit the split responses.": "High"
    },
    "x_capec_typical_severity": "High",
    "x_resources_required": "None: No specialized resources are required to execute this type of attack."
}