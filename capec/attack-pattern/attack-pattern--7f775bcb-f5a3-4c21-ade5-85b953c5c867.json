{
    "type": "attack-pattern",
    "id": "attack-pattern--7f775bcb-f5a3-4c21-ade5-85b953c5c867",
    "created_by_ref": "identity--8f6c4831-6b8a-469b-b654-9dcaeede2d35",
    "created": "2018-03-06T15:56:02.808Z",
    "modified": "2018-03-06T15:56:02.808Z",
    "name": "Using Slashes and URL Encoding Combined to Bypass Validation Logic",
    "description": "This attack targets the encoding of the URL combined with the encoding of the slash characters. An attacker can take advantage of the multiple ways of encoding a URL and abuse the interpretation of the URL. A URL may contain special character that need special syntax handling in order to be interpreted. Special characters are represented using a percentage character followed by two digits representing the octet code of the original character (%HEX-CODE). For instance US-ASCII space character would be represented with %20. This is often referred as escaped ending or percent-encoding. Since the server decodes the URL from the requests, it may restrict the access to some URL paths by validating and filtering out the URL requests it received. An attacker will try to craft an URL with a sequence of special characters which once interpreted by the server will be equivalent to a forbidden URL. It can be difficult to protect against this attack since the URL can contain other format of encoding such as UTF-8 encoding, Unicode-encoding, etc.",
    "external_references": [
        {
            "source_name": "capec",
            "url": "https://capec.mitre.org/data/definitions/64.html",
            "external_id": "CAPEC-64"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/177.html",
            "external_id": "CWE-177"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/171.html",
            "external_id": "CWE-171"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/173.html",
            "external_id": "CWE-173"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/172.html",
            "external_id": "CWE-172"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/73.html",
            "external_id": "CWE-73"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/21.html",
            "external_id": "CWE-21"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/22.html",
            "external_id": "CWE-22"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/74.html",
            "external_id": "CWE-74"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/20.html",
            "external_id": "CWE-20"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/697.html",
            "external_id": "CWE-697"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/707.html",
            "external_id": "CWE-707"
        }
    ],
    "object_marking_refs": [
        "marking-definition--aee86263-8856-421f-b382-457d8408db7d"
    ],
    "x_capec_abstraction": "Detailed",
    "x_capec_consequences": {
        "Denial of Service": "DoS: resource consumption (other)",
        "Run Arbitrary Code": "Execute unauthorized code or commands"
    },
    "x_capec_example_instances": [
        "Attack Example: Combined Encodings CesarFTP\n\t/...%5C/\nAlexandre Cesari released a freeware FTP server for Windows that fails to provide proper filtering against multiple encoding. The FTP server, CesarFTP, included a Web server component that could be attacked with a combination of the triple-dot and URL encoding attacks.\nAn attacker could provide a URL that included a string like\nThis is an interesting exploit because it involves an aggregation of several tricks: the escape character, URL encoding, and the triple dot."
    ],
    "x_capec_likelihood_of_attack": "High",
    "x_capec_prerequisites": [
        "The application accepts and decodes URL string request.",
        "The application performs insufficient filtering/canonicalization on the URLs."
    ],
    "x_capec_skills_required": {
        "The attacker may write a script to defeat the input filtering mechanism.": "Medium",
        "An attacker can try special characters in the URL and bypass the URL validation.": "Low"
    },
    "x_capec_typical_severity": "High",
    "x_resources_required": ""
}