{
    "type": "bundle",
    "id": "bundle--c3008586-1884-453c-8caa-f698ccff71eb",
    "spec_version": "2.0",
    "objects": [
        {
            "type": "attack-pattern",
            "id": "attack-pattern--5cf3eacf-a0c6-4c59-9f97-4f677a90587a",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "created": "2014-06-23T00:00:00.000Z",
            "modified": "2020-07-30T00:00:00.000Z",
            "name": "DTD Injection",
            "description": "An attacker injects malicious content into an application's DTD in an attempt to produce a negative technical impact. DTDs are used to describe how XML documents are processed. Certain malformed DTDs (for example, those with excessive entity expansion as described in CAPEC 197) can cause the XML parsers that process the DTDs to consume excessive resources resulting in resource depletion.",
            "external_references": [
                {
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/228.html",
                    "external_id": "CAPEC-228"
                },
                {
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/829.html",
                    "external_id": "CWE-829"
                },
                {
                    "source_name": "reference_from_CAPEC",
                    "description": "Ryan Naraine, DoS Flaw in SOAP DTD Parameter, InternetNews.com, 2003--12---15, ITBusiness Edge, Quinstreet Inc.",
                    "url": "http://www.internetnews.com/dev-news/article.php/3289191",
                    "external_id": "REF-86"
                }
            ],
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "x_capec_abstraction": "Detailed",
            "x_capec_execution_flow": "<h2> Execution Flow </h2><div><h3>Explore</h3><ol><li> <p> <b>Survey the target: </b>Using a browser or an automated tool, an attacker records all instances of web services to process XML requests.</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>Use an automated tool to record all instances of URLs to process XML requests.</td></tr><tr><td>Use a browser to manually explore the website and analyze how the application processes XML requests.</td></tr></tbody></table><li> <p> <b>Determine use of XML with DTDs: </b>Examine application input to identify XML input that leverage the use of one or more DTDs.</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>Examine any available documentation for the application that discusses expected XML input.</td></tr><tr><td>Exercise the application using XML input with and without a DTD specified. Failure without DTD likely indicates use of DTD.</td></tr></tbody></table></ol></div><div><h3>Exploit</h3><ol><li> <p>[Craft and inject XML containg malicious DTD payload]</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>Inject XML expansion attack that creates a Denial of Service impact on the targeted server using its DTD.</td></tr><tr><td>Inject XML External Entity (XEE) attack that can cause the disclosure of confidential information, execute abitrary code, create a Denial of Service of the targeted server, or several other malicious impacts.</td></tr></tbody></table></ol></div>",
            "x_capec_prerequisites": [
                "The target must be running an XML based application that leverages DTDs."
            ],
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "Medium",
            "x_capec_version": "3.3"
        }
    ]
}