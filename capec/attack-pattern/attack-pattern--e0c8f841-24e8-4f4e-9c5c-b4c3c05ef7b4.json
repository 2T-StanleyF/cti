{
    "type": "attack-pattern",
    "id": "attack-pattern--e0c8f841-24e8-4f4e-9c5c-b4c3c05ef7b4",
    "created_by_ref": "identity--2888a06a-5541-4bad-8066-df6f196f70ff",
    "created": "2018-03-05T19:00:34.748Z",
    "modified": "2018-03-05T19:00:34.748Z",
    "name": "XML Injection",
    "description": "An attacker utilizes crafted XML user-controllable input to probe, attack, and inject data into the XML database, using techniques similar to SQL injection. The user-controllable input can allow for unauthorized viewing of data, bypassing authentication or the front-end application for direct XML database access, and possibly altering database information.",
    "external_references": [
        {
            "source_name": "capec",
            "url": "https://capec.mitre.org/data/definitions/250.html",
            "external_id": "CAPEC-250"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/91.html",
            "external_id": "CWE-91"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/74.html",
            "external_id": "CWE-74"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/20.html",
            "external_id": "CWE-20"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/390.html",
            "external_id": "CWE-390"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/713.html",
            "external_id": "CWE-713"
        },
        {
            "source_name": "cwe",
            "url": "http://cwe.mitre.org/data/definitions/707.html",
            "external_id": "CWE-707"
        }
    ],
    "object_marking_refs": [
        "marking-definition--ad91480b-92ca-4958-92fe-407f4493dcb9"
    ],
    "x_capec_abstraction": "Standard",
    "x_capec_example_instances": [
        "Consider an application that uses an XML database to authenticate its users. The application retrieves the user name and password from a request and forms an XPath expression to query the database. An attacker can successfully bypass authentication and login without valid credentials through XPath Injection. This can be achieved by injecting the query to the XML database with XPath syntax that causes the authentication check to fail. Improper validation of user-controllable input and use of a non-parameterized XPath expression enable the attacker to inject an XPath expression that causes authentication bypass."
    ],
    "x_capec_likelihood_of_attack": "High",
    "x_capec_prerequisites": [
        "XML queries used to process user input and retrieve information stored in XML documents",
        "User-controllable input not properly sanitized"
    ],
    "x_capec_skills_required": {
        "An attacker must have knowledge of XML syntax and constructs in order to successfully leverage XML Injection": "Low"
    },
    "x_resources_required": "None: No specialized resources are required to execute this type of attack."
}